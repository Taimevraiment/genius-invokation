import { Card, Hero, InfoVO, Player, Skill } from '../../typing';
import { getLast } from '../utils/utils';
import { CARD_TYPE, COST_TYPE, DAMAGE_TYPE, DICE_TYPE, ELEMENT_TYPE, PHASE, PLAYER_STATUS, SKILL_TYPE, VERSION, WEAPON_TYPE } from './enum';
import { INIT_ROLL_COUNT, INIT_SWITCH_HERO_DICE } from './gameOption';

export const INIT_PLAYER: Player = {
    id: -1,
    name: '',
    rid: -1,
    handCards: [],
    heros: [],
    pile: [],
    supports: [],
    summons: [],
    combatStatus: [],
    dice: [],
    rollCnt: INIT_ROLL_COUNT,
    status: PLAYER_STATUS.WAITING,
    phase: PHASE.NOT_READY,
    pidx: -1,
    hidx: -1,
    deckIdx: -1,
    isFallAtk: false,
    canAction: false,
    isOffline: false,
    isUsedLengend: false,
    playerInfo: {
        artifactCnt: 0,
        artifactTypeCnt: 0,
        weaponCnt: 0,
        weaponTypeCnt: 0,
        talentCnt: 0,
        talentTypeCnt: 0,
        usedCardIds: [],
        destroyedSupport: 0,
        oppoGetElDmgType: 0,
        discardCnt: 0,
        reconcileCnt: 0,
        discardIds: [],
        initCardIds: [],
        isKillByMyRound: false,
    },
    UI: {
        info: '',
        heroSwitchDice: INIT_SWITCH_HERO_DICE,
        showRerollBtn: false,
        atkhidx: -1,
        tarhidx: -1,
        willGetCard: [],
        willAddCard: [],
        willDiscard: [[], []],
    },
};

export const NULL_SKILL: Skill = {
    id: -1,
    name: '无',
    type: SKILL_TYPE.Passive,
    damage: 0,
    dmgElement: DAMAGE_TYPE.Physical,
    cost: [{
        cnt: 0,
        type: DICE_TYPE.Same,
    }, {
        cnt: 0,
        type: DICE_TYPE.Any,
    }, {
        cnt: 0,
        type: COST_TYPE.Energy,
    }],
    attachElement: ELEMENT_TYPE.Physical,
    handle: () => ({}),
    isForbidden: true,
    dmgChange: 0,
    costChange: [0, 0, []],
    useCntPerRound: 0,
    perCnt: 0,
    useCnt: 0,
    rskid: -1,
    UI: {
        description: '',
        descriptions: [],
        explains: [],
        src: '',
    },
}

export const NULL_HERO: Hero = {
    id: 0,
    entityId: -1,
    name: '无',
    version: getLast(VERSION.slice()),
    tags: [],
    maxHp: 0,
    hp: 0,
    element: ELEMENT_TYPE.Physical,
    weaponType: WEAPON_TYPE.Other,
    maxEnergy: 0,
    energy: 0,
    hidx: -1,
    skills: [],
    weaponSlot: null,
    artifactSlot: null,
    talentSlot: null,
    heroStatus: [],
    isFront: false,
    attachElement: [],
    canSelect: false,
    isSelected: 0,
    UI: {
        src: '',
        srcs: [],
        avatar: '',
        avatars: [],
    },
}

export const NULL_CARD: Card = {
    id: -1,
    cidx: -1,
    entityId: -1,
    name: '无',
    version: getLast(VERSION.slice()),
    cost: 0,
    costChange: 0,
    costType: DICE_TYPE.Any,
    type: CARD_TYPE.Equipment,
    subType: [],
    tag: [],
    userType: 0,
    useCnt: 0,
    perCnt: 0,
    energy: 0,
    anydice: 0,
    selected: false,
    handle: () => ({}),
    canSelectHero: 0,
    canSelectSummon: -1,
    canSelectSupport: -1,
    UI: {
        src: '',
        description: '',
        cnt: 0,
        descriptions: [],
        explains: [],
    },
    hasSubtype: () => false,
    hasTag: () => false,
    setEntityId() { return this },
    setCnt: () => this,
}

export const NULL_MODAL: InfoVO = {
    version: getLast(VERSION.slice()),
    isShow: false,
    type: null,
    info: null,
};

